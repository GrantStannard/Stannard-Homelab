apiVersion: v1
kind: Namespace
metadata:
  name: heimdall
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: heimdall        # < name of the deployment
  namespace: heimdall   # < namespace where place the deployment and pods
  labels:
    app: heimdall       # < label for tagging and reference
spec:
  replicas: 1           # < number of pods to deploy
  selector:
    matchLabels:
      app: heimdall
  strategy:
    rollingUpdate:
      maxSurge: 0       # < The number of pods that can be created above the desired amount of pods during an update
      maxUnavailable: 1 # < The number of pods that can be unavailable during the update process
    type: RollingUpdate # < New pods are added gradually, and old pods are terminated gradually
  template:
    metadata:
      labels:
        app: heimdall
    spec:
      volumes:
        - name: nfs-heimdall
          nfs:
            server: 192.168.68.58
            path: /mnt/fast_speed/opt/kubernetes/heimdall
      containers:
        - image: ghcr.io/linuxserver/heimdall # < the name of the docker image we will use
          name: heimdall                      # < name of container
          imagePullPolicy: Always             # < always use the latest image when creating container/pod
#          env:                                # < the environment variables required (see container documentation)
#            - name: PGID
#              value: "100" # < group "user"
#            - name: PUID
#              value: "1041" # < user "docker"
#            - name: TZ
#              value: Europe/Amsterdam
          ports:                              # < the ports required (see container documentation)
            - containerPort: 80
              name: http-80
              protocol: TCP
            - containerPort: 443
              name: https-443
              protocol: TCP
          volumeMounts:                       # < the volume mount in the container. Look at the relation volumelabel->pvc->pv
            - mountPath: /config               # < mount location in the container
              name: nfs-heimdall               # < volumelabel configured earlier in the yaml file
              subPath: config                  # < subfolder in the nfs share to be mounted
---
apiVersion: v1
kind: Service
metadata:
  name: heimdall-service    # < name of the service
  namespace: heimdall       # < namespace where place the deployment and pods
spec:
  selector:
    app: heimdall           # < reference to the deployment (connects with this deployment)
  ports:
    - name: http-80
      protocol: TCP
      port: 80
    - name: https-443
      protocol: TCP
      port: 443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: heimdall-ingress
  namespace: heimdall
spec:
  rules:
    - host: grantstannard.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: heimdall-service
                port:
                  number: 80
